import 'bloc/sign_up_bloc.dart';import 'models/sign_up_model.dart';import 'package:flutter/material.dart';import 'package:mqd_v1/core/app_export.dart';import 'package:mqd_v1/widgets/custom_elevated_button.dart';import 'package:mqd_v1/widgets/custom_icon_button.dart';import 'package:mqd_v1/widgets/custom_outlined_button.dart';import 'package:outline_gradient_button/outline_gradient_button.dart';import 'package:mqd_v1/domain/facebookauth/facebook_auth_helper.dart';import 'package:mqd_v1/domain/googleauth/google_auth_helper.dart';class SignUpScreen extends StatelessWidget {const SignUpScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<SignUpBloc>(create: (context) => SignUpBloc(SignUpState(signUpModelObj: SignUpModel()))..add(SignUpInitialEvent()), child: SignUpScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return BlocBuilder<SignUpBloc, SignUpState>(builder: (context, state) {return SafeArea(child: Scaffold(extendBody: true, extendBodyBehindAppBar: true, body: Container(width: mediaQueryData.size.width, height: mediaQueryData.size.height, decoration: BoxDecoration(gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.gray90003, appTheme.black900])), child: Container(width: double.maxFinite, padding: getPadding(left: 12, right: 12), child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(imagePath: ImageConstant.imgMqdlogo, height: getVerticalSize(150), width: getHorizontalSize(151), radius: BorderRadius.only(topLeft: Radius.circular(getHorizontalSize(133)), topRight: Radius.circular(getHorizontalSize(133)), bottomLeft: Radius.circular(getHorizontalSize(400)), bottomRight: Radius.circular(getHorizontalSize(400))), margin: getMargin(top: 5)), Padding(padding: getPadding(top: 56), child: Text("msg_sign_up_to_continue".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumSkModernist)), CustomElevatedButton(width: double.maxFinite, height: getVerticalSize(56), text: "msg_continue_with_email".tr, margin: getMargin(left: 28, top: 31, right: 28), buttonStyle: CustomButtonStyles.gradientnameprimarynamedeeppurpleA20001TL15, decoration: CustomButtonStyles.gradientnameprimarynamedeeppurpleA20001TL15Decoration, buttonTextStyle: CustomTextStyles.titleMediumSkModernistBold, onTap: () {onTapContinuewith(context);}), Padding(padding: getPadding(left: 28, top: 20, right: 28), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.pink40001, appTheme.gray20001.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(15), topRight: Radius.circular(15), bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)), child: CustomOutlinedButton(width: double.maxFinite, height: getVerticalSize(56), text: "msg_use_phone_number".tr, margin: getMargin(left: 28, top: 20, right: 28), buttonStyle: CustomButtonStyles.outline, buttonTextStyle: CustomTextStyles.titleMediumSkModernistPinkA200))), Container(height: getVerticalSize(56), width: getHorizontalSize(350), margin: getMargin(top: 40), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: SizedBox(width: getHorizontalSize(350), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.blueGray90003))), Align(alignment: Alignment.center, child: Container(width: getSize(56), padding: getPadding(left: 16, top: 17, right: 16, bottom: 17), decoration: AppDecoration.txtOutline1.copyWith(borderRadius: BorderRadiusStyle.txtCircleBorder28), child: Text("lbl_or".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.bodyLarge!.copyWith(letterSpacing: getHorizontalSize(0.16)))))])), Padding(padding: getPadding(left: 28), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 6, bottom: 8), child: SizedBox(width: getHorizontalSize(94), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.black90005.withOpacity(0.4)))), Padding(padding: getPadding(left: 14), child: Text("lbl_or_sign_up_with".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodySmallSkModernistBlack90005)), Padding(padding: getPadding(top: 6, bottom: 8), child: SizedBox(width: getHorizontalSize(108), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.black90005.withOpacity(0.4), indent: getHorizontalSize(14))))])), Padding(padding: getPadding(top: 23), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.pink40001, appTheme.gray20001.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(15), topRight: Radius.circular(15), bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)), child: CustomIconButton(height: 64, width: 64, padding: getPadding(all: 16), onTap: () {onTapBtnFacebook(context);}, child: CustomImageView(svgPath: ImageConstant.imgFacebook))), Padding(padding: getPadding(left: 20), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.pink40001, appTheme.gray20001.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(15), topRight: Radius.circular(15), bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)), child: CustomIconButton(height: 64, width: 64, margin: getMargin(left: 20), padding: getPadding(all: 16), onTap: () {onTapBtnGoogle(context);}, child: CustomImageView(svgPath: ImageConstant.imgGoogle)))), Padding(padding: getPadding(left: 20), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.pink40001, appTheme.gray20001.withOpacity(0)]), corners: Corners(topLeft: Radius.circular(15), topRight: Radius.circular(15), bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)), child: CustomIconButton(height: 64, width: 64, margin: getMargin(left: 20), padding: getPadding(all: 16), child: CustomImageView(svgPath: ImageConstant.imgEye))))])), Padding(padding: getPadding(top: 70), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_terms_of_use".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyMediumSkModernistPinkA200)), Padding(padding: getPadding(left: 32, top: 1), child: Text("lbl_privacy_policy".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyMediumSkModernistPinkA200))]))])))));}); } 
/// Navigates to the verifyNumberScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the verifyNumberScreen.
onTapContinuewith(BuildContext context) { NavigatorService.pushNamed(AppRoutes.verifyNumberScreen, ); } 
/// Performs a Facebook sign-in and returns a [FacebookUser] object.
///
/// If the sign-in is successful, the [onSuccess] callback will be called with
/// a TODO comment needed to be modified by you.
/// If the sign-in fails, the [onError] callback will be called with the error message.
///
/// Throws an exception if the Facebook sign-in process fails.
onTapBtnFacebook(BuildContext context) async  {             await FacebookAuthHelper().facebookSignInProcess().then((facebookUser) {
              //TODO Actions to be performed after signin
              }).catchError((onError) {
              ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(onError.toString())));
            });
             } 
/// Performs a Google sign-in and returns a [GoogleUser] object.
///
/// If the sign-in is successful, the [onSuccess] callback will be called with
/// a TODO comment needed to be modified by you.
/// If the sign-in fails, the [onError] callback will be called with the error message.
///
/// Throws an exception if the Google sign-in process fails.
onTapBtnGoogle(BuildContext context) async  {         await GoogleAuthHelper().googleSignInProcess().then((googleUser) {
          if(googleUser!=null){
            //TODO Actions to be performed after signin
          } else {
            ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('user data is empty')));
          }
        }).catchError((onError) {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(onError.toString())));
        });
         } 
 }
