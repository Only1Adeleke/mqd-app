import '../notification_screen/widgets/notification_item_widget.dart';import 'bloc/notification_bloc.dart';import 'models/notification_item_model.dart';import 'models/notification_model.dart';import 'package:flutter/material.dart';import 'package:mqd_v1/core/app_export.dart';class NotificationScreen extends StatelessWidget {const NotificationScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<NotificationBloc>(create: (context) => NotificationBloc(NotificationState(notificationModelObj: NotificationModel()))..add(NotificationInitialEvent()), child: NotificationScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(extendBody: true, extendBodyBehindAppBar: true, body: Container(width: mediaQueryData.size.width, height: mediaQueryData.size.height, decoration: BoxDecoration(gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.gray90003, appTheme.black900])), child: Container(width: double.maxFinite, padding: getPadding(top: 13, bottom: 13), child: Padding(padding: getPadding(left: 24, top: 26), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgArrowleft, height: getVerticalSize(13), width: getHorizontalSize(22), onTap: () {onTapImgArrowleft(context);}), Container(margin: getMargin(left: 5, top: 28), decoration: AppDecoration.txtOutline, child: Text("lbl_notifications".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.displaySmall!.copyWith(letterSpacing: getHorizontalSize(0.36)))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(top: 13), child: Text("msg_check_notifications".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.bodyLarge!.copyWith(letterSpacing: getHorizontalSize(0.16))))), Expanded(child: Padding(padding: getPadding(left: 8, top: 33), child: BlocSelector<NotificationBloc, NotificationState, NotificationModel?>(selector: (state) => state.notificationModelObj, builder: (context, notificationModelObj) {return ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return Padding(padding: getPadding(top: 14.5, bottom: 14.5), child: SizedBox(width: getHorizontalSize(343), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1))));}, itemCount: notificationModelObj?.notificationItemList.length ?? 0, itemBuilder: (context, index) {NotificationItemModel model = notificationModelObj?.notificationItemList[index] ?? NotificationItemModel(); return NotificationItemWidget(model);});})))])))))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapImgArrowleft(BuildContext context) { NavigatorService.goBack(); } 
 }
