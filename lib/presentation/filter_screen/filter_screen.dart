import 'bloc/filter_bloc.dart';import 'models/filter_model.dart';import 'package:flutter/material.dart';import 'package:mqd_v1/core/app_export.dart';import 'package:mqd_v1/widgets/app_bar/appbar_image.dart';import 'package:mqd_v1/widgets/app_bar/custom_app_bar.dart';import 'package:mqd_v1/widgets/custom_drop_down.dart';import 'package:mqd_v1/widgets/custom_elevated_button.dart';import 'package:mqd_v1/widgets/custom_text_form_field.dart';import 'package:outline_gradient_button/outline_gradient_button.dart';class FilterScreen extends StatelessWidget {const FilterScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<FilterBloc>(create: (context) => FilterBloc(FilterState(filterModelObj: FilterModel()))..add(FilterInitialEvent()), child: FilterScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(extendBody: true, extendBodyBehindAppBar: true, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(75), leadingWidth: 46, leading: AppbarImage(height: getVerticalSize(13), width: getHorizontalSize(22), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 20, bottom: 22), onTap: () {onTapArrowleft3(context);}), actions: [AppbarImage(height: getVerticalSize(19), width: getHorizontalSize(14), svgPath: ImageConstant.imgRefresh, margin: getMargin(left: 23, top: 18, right: 23, bottom: 18))]), body: Container(width: mediaQueryData.size.width, height: mediaQueryData.size.height, decoration: BoxDecoration(gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.gray90003, appTheme.black900])), child: SingleChildScrollView(padding: getPadding(top: 6), child: Padding(padding: getPadding(left: 12, bottom: 5), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(margin: getMargin(left: 20), decoration: AppDecoration.txtOutline, child: Text("lbl_filter_options".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.headlineLarge30.copyWith(letterSpacing: getHorizontalSize(0.3)))), Align(alignment: Alignment.centerRight, child: Container(width: getHorizontalSize(343), margin: getMargin(left: 20, top: 15), child: Text("msg_manage_and_set_your".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.bodyLarge!.copyWith(letterSpacing: getHorizontalSize(0.16))))), Padding(padding: getPadding(left: 2, top: 25), child: Text("lbl_here_to".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPink300ab)), Padding(padding: getPadding(top: 11, right: 13), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.09, 1), end: Alignment(0.94, 1), colors: [appTheme.pink40001, appTheme.deepPurpleA200]), corners: Corners(topLeft: Radius.circular(30), topRight: Radius.circular(30), bottomLeft: Radius.circular(30), bottomRight: Radius.circular(30)), child: BlocSelector<FilterBloc, FilterState, FilterModel?>(selector: (state) => state.filterModelObj, builder: (context, filterModelObj) {return CustomDropDown(icon: Container(margin: getMargin(left: 30, right: 30), child: CustomImageView(svgPath: ImageConstant.imgDrpdwnIcon)), hintText: "msg_make_new_friends".tr, textStyle: CustomTextStyles.titleMediumWhiteA700_1, items: filterModelObj?.dropdownItemList ?? [], filled: true, fillColor: appTheme.black90003, contentPadding: getPadding(left: 29, top: 18, bottom: 18), onChanged: (value) {context.read<FilterBloc>().add(ChangeDropDownEvent(value: value));});}))), Padding(padding: getPadding(left: 2, top: 32), child: Text("lbl_want_to_meet".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPink300ab)), Padding(padding: getPadding(top: 11, right: 13), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.09, 1), end: Alignment(0.94, 1), colors: [appTheme.pink40001, appTheme.deepPurpleA200]), corners: Corners(topLeft: Radius.circular(30), topRight: Radius.circular(30), bottomLeft: Radius.circular(30), bottomRight: Radius.circular(30)), child: BlocSelector<FilterBloc, FilterState, FilterModel?>(selector: (state) => state.filterModelObj, builder: (context, filterModelObj) {return CustomDropDown(icon: Container(margin: getMargin(left: 30, right: 30), child: CustomImageView(svgPath: ImageConstant.imgDrpdwnIcon)), hintText: "lbl_woman".tr, textStyle: CustomTextStyles.titleMediumWhiteA700_1, items: filterModelObj?.dropdownItemList1 ?? [], filled: true, fillColor: appTheme.black90003, contentPadding: getPadding(left: 29, top: 18, bottom: 18), onChanged: (value) {context.read<FilterBloc>().add(ChangeDropDown1Event(value: value));});}))), Padding(padding: getPadding(left: 2, top: 33), child: Text("msg_preferred_age_range".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPink300ab)), Padding(padding: getPadding(top: 10, right: 13), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.09, 1), end: Alignment(0.94, 1), colors: [appTheme.pink40001, appTheme.deepPurpleA200]), corners: Corners(topLeft: Radius.circular(30), topRight: Radius.circular(30), bottomLeft: Radius.circular(30), bottomRight: Radius.circular(30)), child: BlocSelector<FilterBloc, FilterState, FilterModel?>(selector: (state) => state.filterModelObj, builder: (context, filterModelObj) {return CustomDropDown(icon: Container(margin: getMargin(left: 30, right: 30), child: CustomImageView(svgPath: ImageConstant.imgDrpdwnIcon)), hintText: "lbl_20_35".tr, textStyle: CustomTextStyles.titleMediumWhiteA700_1, items: filterModelObj?.dropdownItemList2 ?? [], filled: true, fillColor: appTheme.black90003, contentPadding: getPadding(left: 29, top: 18, bottom: 18), onChanged: (value) {context.read<FilterBloc>().add(ChangeDropDown2Event(value: value));});}))), Padding(padding: getPadding(left: 2, top: 33), child: Text("msg_preferred_language_s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPink300ab)), Padding(padding: getPadding(top: 10, right: 13), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.09, 1), end: Alignment(0.94, 1), colors: [appTheme.pink40001, appTheme.deepPurpleA200]), corners: Corners(topLeft: Radius.circular(30), topRight: Radius.circular(30), bottomLeft: Radius.circular(30), bottomRight: Radius.circular(30)), child: BlocSelector<FilterBloc, FilterState, FilterModel?>(selector: (state) => state.filterModelObj, builder: (context, filterModelObj) {return CustomDropDown(icon: Container(margin: getMargin(left: 30, right: 30), child: CustomImageView(svgPath: ImageConstant.imgDrpdwnIcon)), hintText: "msg_english_french".tr, textStyle: CustomTextStyles.titleMediumWhiteA700_1, items: filterModelObj?.dropdownItemList3 ?? [], filled: true, fillColor: appTheme.black90003, contentPadding: getPadding(left: 29, top: 18, bottom: 18), onChanged: (value) {context.read<FilterBloc>().add(ChangeDropDown3Event(value: value));});}))), Padding(padding: getPadding(left: 2, top: 31), child: Text("lbl_location".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPink300ab)), Padding(padding: getPadding(top: 12, right: 13), child: OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.09, 1), end: Alignment(0.94, 1), colors: [appTheme.pink40001, appTheme.deepPurpleA200]), corners: Corners(topLeft: Radius.circular(30), topRight: Radius.circular(30), bottomLeft: Radius.circular(30), bottomRight: Radius.circular(30)), child: BlocSelector<FilterBloc, FilterState, TextEditingController?>(selector: (state) => state.groupthirteenController, builder: (context, groupthirteenController) {return CustomTextFormField(controller: groupthirteenController, contentPadding: getPadding(left: 29, top: 18, bottom: 18), textStyle: CustomTextStyles.titleMediumWhiteA700_1, hintText: "lbl_florida_us".tr, hintStyle: CustomTextStyles.titleMediumWhiteA700_1, suffix: Container(margin: getMargin(left: 30, top: 20, right: 29, bottom: 20), child: CustomImageView(svgPath: ImageConstant.imgLocationWhiteA70015x12)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(60)), filled: true, fillColor: appTheme.black90003, defaultBorderDecoration: TextFormFieldStyleHelper.outlineTL30, enabledBorderDecoration: TextFormFieldStyleHelper.outlineTL30, focusedBorderDecoration: TextFormFieldStyleHelper.outlineTL30, disabledBorderDecoration: TextFormFieldStyleHelper.outlineTL30);}))), Padding(padding: getPadding(left: 2, top: 33), child: Text("lbl_distance_range".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPink300ab)), Padding(padding: getPadding(left: 2, top: 8), child: Text("lbl_0_10_km".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumWhiteA700_1)), Container(height: getVerticalSize(19), width: getHorizontalSize(348), margin: getMargin(left: 2, top: 14), child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.bottomCenter, child: Padding(padding: getPadding(bottom: 6), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgPinkline, height: getVerticalSize(1), width: getHorizontalSize(348)), Divider(height: getVerticalSize(3), thickness: getVerticalSize(3), color: appTheme.indigo90003)]))), Align(alignment: Alignment.centerLeft, child: Container(height: getSize(19), width: getSize(19), margin: getMargin(left: 65), decoration: BoxDecoration(color: appTheme.black90003, borderRadius: BorderRadius.circular(getHorizontalSize(9)), border: Border.all(color: appTheme.pink40001, width: getHorizontalSize(3)))))])), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(28), width: getHorizontalSize(255), margin: getMargin(top: 36), child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.center, child: Text("msg_advance_filter_options".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeSemiBold.copyWith(letterSpacing: getHorizontalSize(0.22)))), CustomImageView(svgPath: ImageConstant.imgArrowright, height: getVerticalSize(12), width: getHorizontalSize(18), alignment: Alignment.centerRight, margin: getMargin(right: 1))]))), CustomElevatedButton(width: getHorizontalSize(212), height: getVerticalSize(65), text: "lbl_apply_filters".tr, margin: getMargin(top: 36, right: 62), buttonStyle: CustomButtonStyles.gradientnameprimarynamedeeppurpleA20001, decoration: CustomButtonStyles.gradientnameprimarynamedeeppurpleA20001Decoration, buttonTextStyle: CustomTextStyles.titleMediumSemiBold_1, alignment: Alignment.centerRight)])))))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleft3(BuildContext context) { NavigatorService.goBack(); } 
 }
