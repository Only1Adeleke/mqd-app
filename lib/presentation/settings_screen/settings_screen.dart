import 'bloc/settings_bloc.dart';import 'models/settings_model.dart';import 'package:flutter/material.dart';import 'package:mqd_v1/core/app_export.dart';import 'package:mqd_v1/widgets/app_bar/appbar_image.dart';import 'package:mqd_v1/widgets/app_bar/custom_app_bar.dart';import 'package:mqd_v1/widgets/custom_elevated_button.dart';class SettingsScreen extends StatelessWidget {const SettingsScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<SettingsBloc>(create: (context) => SettingsBloc(SettingsState(settingsModelObj: SettingsModel()))..add(SettingsInitialEvent()), child: SettingsScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return BlocBuilder<SettingsBloc, SettingsState>(builder: (context, state) {return SafeArea(child: Scaffold(extendBody: true, extendBodyBehindAppBar: true, appBar: CustomAppBar(height: getVerticalSize(77), leadingWidth: 46, leading: AppbarImage(height: getVerticalSize(13), width: getHorizontalSize(22), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 18, bottom: 24), onTap: () {onTapArrowleft2(context);}), actions: [AppbarImage(height: getVerticalSize(23), width: getHorizontalSize(22), imagePath: ImageConstant.imgLogout, margin: getMargin(left: 22, top: 16, right: 22, bottom: 16))]), body: Container(width: mediaQueryData.size.width, height: mediaQueryData.size.height, decoration: BoxDecoration(gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.gray90003, appTheme.black900])), child: SingleChildScrollView(padding: getPadding(top: 4), child: Padding(padding: getPadding(left: 27, bottom: 5), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(margin: getMargin(left: 1), decoration: AppDecoration.txtOutline, child: Text("lbl_settings".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.displaySmall!.copyWith(letterSpacing: getHorizontalSize(0.36)))), Padding(padding: getPadding(left: 2, top: 13), child: Text("msg_manage_your_settings".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.bodyLarge!.copyWith(letterSpacing: getHorizontalSize(0.16)))), Padding(padding: getPadding(top: 29), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgUserWhiteA700, height: getVerticalSize(16), width: getHorizontalSize(12), margin: getMargin(top: 3, bottom: 5)), Padding(padding: getPadding(left: 23), child: Text("lbl_account".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 2, top: 19), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgFavorite, height: getVerticalSize(13), width: getHorizontalSize(17), margin: getMargin(top: 7, bottom: 4)), Padding(padding: getPadding(left: 15), child: Text("lbl_likes_liked".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(top: 19), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgNotification, height: getVerticalSize(16), width: getHorizontalSize(13), margin: getMargin(top: 5, bottom: 2)), Padding(padding: getPadding(left: 22), child: Text("lbl_notifications".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), CustomElevatedButton(width: double.maxFinite, height: getVerticalSize(25), text: "msg_manage_subscriptions".tr, margin: getMargin(left: 1, top: 20, right: 92), leftIcon: Container(margin: getMargin(right: 22), child: CustomImageView(svgPath: ImageConstant.imgVipIcon)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: theme.textTheme.titleLarge!, onTap: () {onTapManage(context);}), CustomElevatedButton(width: getHorizontalSize(122), height: getVerticalSize(25), text: "lbl_payment".tr, margin: getMargin(left: 1, top: 23), leftIcon: Container(margin: getMargin(right: 21), child: CustomImageView(svgPath: ImageConstant.imgCallWhiteA700)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: theme.textTheme.titleLarge!, onTap: () {onTapPayment(context);}), Padding(padding: getPadding(left: 1, top: 22), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgFileWhiteA700, height: getSize(13), width: getSize(13), margin: getMargin(top: 3, bottom: 8)), Padding(padding: getPadding(left: 20), child: Text("lbl_message_options".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 2, top: 28), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgUserWhiteA70016x14, height: getVerticalSize(16), width: getHorizontalSize(14), margin: getMargin(top: 2, bottom: 6)), Padding(padding: getPadding(left: 18), child: Text("lbl_manage_matches".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 3, top: 29), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgLock, height: getVerticalSize(15), width: getHorizontalSize(11), margin: getMargin(top: 2, bottom: 7)), Padding(padding: getPadding(left: 20), child: Text("lbl_privacy_options".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 1, top: 23), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgTrashWhiteA70013x13, height: getVerticalSize(15), width: getHorizontalSize(13), margin: getMargin(top: 4, bottom: 5)), Padding(padding: getPadding(left: 20), child: Text("lbl_delete_account".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(top: 37), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), indent: getHorizontalSize(4))), Padding(padding: getPadding(left: 3, top: 31), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgAlarm, height: getVerticalSize(16), width: getHorizontalSize(13), margin: getMargin(top: 1, bottom: 7)), Padding(padding: getPadding(left: 18), child: Text("lbl_safety".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 4, top: 20), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgWarning, height: getVerticalSize(15), width: getHorizontalSize(13), margin: getMargin(top: 2, bottom: 7)), Padding(padding: getPadding(left: 17), child: Text("lbl_help_center".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 4, top: 20), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgSave, height: getVerticalSize(15), width: getHorizontalSize(12), margin: getMargin(top: 5, bottom: 4)), Padding(padding: getPadding(left: 18), child: Text("msg_terms_conditions".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))])), Padding(padding: getPadding(left: 4, top: 25), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgInfo, height: getVerticalSize(17), width: getHorizontalSize(12), margin: getMargin(top: 3, bottom: 4)), Padding(padding: getPadding(left: 18), child: Text("lbl_privacy_policy".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge!.copyWith(letterSpacing: getHorizontalSize(0.2))))]))]))))));}); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleft2(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the subscriptionScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the subscriptionScreen.
onTapManage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.subscriptionScreen, ); } 
/// Navigates to the paymentScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the paymentScreen.
onTapPayment(BuildContext context) { NavigatorService.pushNamed(AppRoutes.paymentScreen, ); } 
 }
