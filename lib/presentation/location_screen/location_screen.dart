import 'bloc/location_bloc.dart';import 'models/location_model.dart';import 'package:flutter/material.dart';import 'package:mqd_v1/core/app_export.dart';import 'package:mqd_v1/widgets/custom_elevated_button.dart';import 'package:mqd_v1/widgets/custom_floating_text_field.dart';import 'package:mqd_v1/widgets/custom_search_view.dart';import 'package:outline_gradient_button/outline_gradient_button.dart';class LocationScreen extends StatelessWidget {const LocationScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<LocationBloc>(create: (context) => LocationBloc(LocationState(locationModelObj: LocationModel()))..add(LocationInitialEvent()), child: LocationScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(extendBody: true, extendBodyBehindAppBar: true, resizeToAvoidBottomInset: false, body: Container(width: mediaQueryData.size.width, height: mediaQueryData.size.height, decoration: BoxDecoration(gradient: LinearGradient(begin: Alignment(0.5, 0), end: Alignment(0.5, 1), colors: [appTheme.gray90003, appTheme.black900])), child: Container(width: double.maxFinite, padding: getPadding(left: 24, right: 24), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgArrowleft, height: getVerticalSize(13), width: getHorizontalSize(22), alignment: Alignment.centerLeft, margin: getMargin(top: 40), onTap: () {onTapImgArrowleft(context);}), Container(margin: getMargin(top: 133), decoration: AppDecoration.txtOutline, child: Text("lbl_location".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: theme.textTheme.displaySmall!.copyWith(letterSpacing: getHorizontalSize(0.36)))), Container(width: getHorizontalSize(293), margin: getMargin(left: 17, top: 48, right: 15), child: Text("msg_let_the_app_locate".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: theme.textTheme.bodyLarge!.copyWith(letterSpacing: getHorizontalSize(0.16)))), Padding(padding: getPadding(top: 28, right: 10), child: BlocSelector<LocationBloc, LocationState, TextEditingController?>(selector: (state) => state.locationoneController, builder: (context, locationoneController) {return CustomFloatingTextField(controller: locationoneController, textStyle: CustomTextStyles.titleMediumWhiteA700_1, hintText: "msg_current_location".tr, hintStyle: CustomTextStyles.titleMediumWhiteA700_1, labelText: "msg_current_location".tr, labelStyle: CustomTextStyles.titleMediumWhiteA700_1, textInputAction: TextInputAction.next, alignment: Alignment.centerLeft, suffix: Container(margin: getMargin(left: 6, right: 6), child: CustomImageView(svgPath: ImageConstant.imgLocation)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(57)), filled: true, fillColor: appTheme.black90003, contentPadding: getPadding(left: 29, top: 27, right: 29, bottom: 6));})), OutlineGradientButton(padding: EdgeInsets.only(left: getHorizontalSize(2), top: getVerticalSize(2), right: getHorizontalSize(2), bottom: getVerticalSize(2)), strokeWidth: getHorizontalSize(2), gradient: LinearGradient(begin: Alignment(0.09, 1), end: Alignment(0.94, 1), colors: [appTheme.pink40001.withOpacity(0.49), appTheme.deepPurpleA200.withOpacity(0.49)]), corners: Corners(topLeft: Radius.circular(27), topRight: Radius.circular(27), bottomLeft: Radius.circular(27), bottomRight: Radius.circular(27)), child: BlocSelector<LocationBloc, LocationState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(controller: searchController, hintText: "msg_search_new_location".tr, hintStyle: CustomTextStyles.titleMediumWhiteA700_1, textStyle: CustomTextStyles.titleMediumWhiteA700_1, suffix: Container(margin: getMargin(left: 21, top: 17, right: 26, bottom: 17), child: CustomImageView(imagePath: ImageConstant.imgSearch, height: getSize(19), width: getSize(19))), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(54)), filled: true, fillColor: appTheme.black90003.withOpacity(0.49), contentPadding: getPadding(left: 30, top: 15, bottom: 15));})), CustomElevatedButton(width: getHorizontalSize(212), height: getVerticalSize(65), text: "lbl_continue".tr, margin: getMargin(top: 85), buttonStyle: CustomButtonStyles.gradientnameprimarynamedeeppurpleA20001, decoration: CustomButtonStyles.gradientnameprimarynamedeeppurpleA20001Decoration, buttonTextStyle: CustomTextStyles.titleMediumSemiBold_1, onTap: () {onTapContinue(context);}), Spacer(), CustomImageView(imagePath: ImageConstant.imgPbgoogle, height: getVerticalSize(27), width: getHorizontalSize(201))]))))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapImgArrowleft(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the homeSwipeScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the homeSwipeScreen.
onTapContinue(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homeSwipeScreen, ); } 
 }
